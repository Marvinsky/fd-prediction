p01.pddl:returning best heuristic(GAPDB)[,0,]:[0,1,2,3,7,8]-[4,5,6]-,mp:,1.0000000,size:,2000000,disjoint_patterns:,0-best_fitness:33.5962,,initial value:49,GAPDB generation time:3.6
p01.pddl:returning best heuristic(GAPDB)[,1,]:[0,1,2,4,6,7]-[3,5,8]-,mp:,0.4000000,size:,2000000,disjoint_patterns:,1-best_fitness:34.6382,,initial value:44,GAPDB generation time:1.86
p01.pddl:returning best heuristic(GAPDB)[,2,]:[0,1,2,6,7]-[0,2,3,6,7,8]-,mp:,0.2000000,size:,2000000,disjoint_patterns:,0-best_fitness:34.6382,,initial value:44,GAPDB generation time:3.38
p01.pddl:returning best heuristic(GAPDB)[,3,]:[0,1,2,3,4,6,8]-[5,7]-,mp:,0.3000000,size:,2000000,disjoint_patterns:,1-best_fitness:32.434,,initial value:45,GAPDB generation time:2.5
p01.pddl:returning best heuristic(GAPDB)[,4,]:[0,1,2,3,7,8]-[4,5,6]-,mp:,0.9000000,size:,2000000,disjoint_patterns:,1-best_fitness:33.5962,,initial value:49,GAPDB generation time:3.14
p01.pddl:returning best heuristic(GAPDB)[,5,]:[0,1,2,6,7,8]-[0,5,6,7]-,mp:,0.7000000,size:,2000000,disjoint_patterns:,0-best_fitness:45.1274,,initial value:54,GAPDB generation time:2.7
p01.pddl:returning best heuristic(GAPDB)[,6,]:[1,2,3,4,5,6,8]-[0,2,7,8]-,mp:,0.6000000,size:,2000000,disjoint_patterns:,0-best_fitness:35.1708,,initial value:54,GAPDB generation time:4.62
