p05.pddl:returning best heuristic(GAPDB)[,0,]:[0,3,4,5,6,9,10,14,16,18,19,23,25,26]-[1,7,8,11,12,13,15,17,20,21,22,24,27,28]-,mp:,1.0000000,size:,2000000,disjoint_patterns:,0-best_fitness:0,,initial value:0,GAPDB generation time:16.54
p05.pddl:returning best heuristic(GAPDB)[,1,]:[2,5,6,16,18,19,20,21,22,24,26,27,28]-[0,4,7,8,9,10,11,12,13,14,15,17,23,25]-,mp:,0.4000000,size:,2000000,disjoint_patterns:,1-best_fitness:0,,initial value:0,GAPDB generation time:7.7
p05.pddl:returning best heuristic(GAPDB)[,2,]:[1,6,8,9,10,11,12,14,16,19,20,22,23,26]-[0,3,4,5,13,15,17,18,21,24,25,27,28]-,mp:,0.2000000,size:,2000000,disjoint_patterns:,0-best_fitness:0,,initial value:0,GAPDB generation time:9.96
p05.pddl:returning best heuristic(GAPDB)[,3,]:[0,2,6,10,11,16,17,19,21,22,25,26,27]-[1,3,5,7,9,12,14,15,18,20,23,24,28]-,mp:,0.3000000,size:,2000000,disjoint_patterns:,1-best_fitness:0,,initial value:0,GAPDB generation time:7.98
p05.pddl:returning best heuristic(GAPDB)[,4,]:[2,3,4,6,8,10,12,13,19,24,25,26,27,28]-[5,9,11,14,15,16,17,18,20,21,22,23]-,mp:,0.9000000,size:,2000000,disjoint_patterns:,1-best_fitness:0,,initial value:0,GAPDB generation time:7.52
p05.pddl:returning best heuristic(GAPDB)[,5,]:[5,10,11,12,16,17,18,20,21,24,25,26,27]-[0,2,3,4,6,8,9,13,14,15,19,22,23,28]-,mp:,0.7000000,size:,2000000,disjoint_patterns:,0-best_fitness:0,,initial value:0,GAPDB generation time:7.34
